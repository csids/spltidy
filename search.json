[{"path":"https://www.csids.no/cstidy/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"test","title":"test","text":"hello test","code":""},{"path":"https://www.csids.no/cstidy/CONTRIBUTING.html","id":"extra","dir":"","previous_headings":"","what":"extra","title":"test","text":"starting point, use tidyverse style guide","code":""},{"path":"https://www.csids.no/cstidy/CONTRIBUTING.html","id":"section","dir":"","previous_headings":"","what":"test","title":"test","text":"implement pre-commit git hooks (richard ) [right now]","code":""},{"path":"https://www.csids.no/cstidy/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"pull requests?","title":"test","text":"Documentation docs.sykdomspulsen./* (roxygen2/vignettes R-packages .Rmd files sykdomspulsen-org.github.io) done via main branch, pull requests required. Otherwise, every Depends active maintainer package. small change, person turnus check pull requests 0800 1000 next day","code":""},{"path":[]},{"path":[]},{"path":"https://www.csids.no/cstidy/CONTRIBUTING.html","id":"when-should-i-write-a-function-and-put-it-in-the-package","dir":"","previous_headings":"","what":"WHEN SHOULD I WRITE A FUNCTION AND PUT IT IN THE PACKAGE","title":"test","text":"-> something 3 times? -> want force everyone things 1 way","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"csfmt_rts_data_v2","dir":"Articles","previous_headings":"","what":"csfmt_rts_data_v2","title":"Data format (csfmt_rts_data_v2)","text":"document presents data format csfmt_rts_data_v2. csfmt_rts_data_v2 data format CSIDS team recommends using real-time surveillance infectious diseases.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"style","dir":"Articles","previous_headings":"","what":"Style","title":"Data format (csfmt_rts_data_v2)","text":"Language English primary language code. Names abbreviations Norwegian kept : data sources msis, daar, sysvak, normomo. Capital letters Capital letters avoided whenever possible. also case filenames (e.g. data.rds preferred data.RDS) snake_case camelCase? Use snake_case. Timestamping file names results (e.g. reports), indicator time files created necessary. allows us find one recent version files names, allows easy tracking Airflow error. e.g. Epidemiologisk_situasjonsrapport_2021-05-31_0659.docx report generated May 31, 2021 06:59 .","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"ordering-of-variables","dir":"Articles","previous_headings":"","what":"Ordering of variables","title":"Data format (csfmt_rts_data_v2)","text":"Sometimes variables need ordered. Variables ordered follows: time location age sex e.g. database table called msis_by_time_location_age_sex filename called 2020_oslo_05-10_male.xlsx","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"time","dir":"Articles","previous_headings":"","what":"Time","title":"Data format (csfmt_rts_data_v2)","text":"Time functions can obtained cstime. Missing time data coded NA. Uncommon/internal use demarcated line text.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"approved-events","dir":"Articles","previous_headings":"Time","what":"Approved events","title":"Data format (csfmt_rts_data_v2)","text":"following approved events:","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"location","dir":"Articles","previous_headings":"","what":"Location","title":"Data format (csfmt_rts_data_v2)","text":"Locations can obtained csdata. Valid locations (location types) available csdata::nor_locations_names(). Uncommon/internal use demarcated line text.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"ages","dir":"Articles","previous_headings":"","what":"Ages","title":"Data format (csfmt_rts_data_v2)","text":"Ages coded characters always contain 3 digits. age range, two ages joined underscore (e.g. 005_010). Use 085p instead >=085 85+, allow easy conversion long wide formatted data. format help data easily sorted, kept right order, generate valid variable names converted wide-format. Missing ages coded “missing”.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"sex","dir":"Articles","previous_headings":"","what":"Sex","title":"Data format (csfmt_rts_data_v2)","text":"Sex coded characters. Missing sexes coded “missing”.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"unified-columns","dir":"Articles","previous_headings":"","what":"Unified columns","title":"Data format (csfmt_rts_data_v2)","text":"datasets csverse format csfmt_rts_data_v2 contain 16 columns. Time conversion functions can found package cstime.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"smart-assignment","dir":"Articles","previous_headings":"Unified columns","what":"Smart assignment","title":"Data format (csfmt_rts_data_v2)","text":"csfmt_rts_data_v2 smart assignment time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"context-specific-columns","dir":"Articles","previous_headings":"","what":"Context-specific columns","title":"Data format (csfmt_rts_data_v2)","text":"Variable names part unified columns called context-specific columns, made 2 mandatory (description, format) 5 optional (time, statistics, forecast, censored/status, formatted) sections, separated underscores. format follows: [blah] indicates optional argument. rare optional arguments used time.","code":"description[_time][_statistics]_format[_forecast][_censored/status][_formatted]"},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"examples","dir":"Articles","previous_headings":"Context-specific columns","what":"Examples","title":"Data format (csfmt_rts_data_v2)","text":"examples, description, time, statistics, format, censor/status sections separated /. example relating death nowcasting: deaths_registered/_n: Number registered deaths. deaths_nowcasted/_n: Number registered deaths, corrected registration delay (nowcasting). deaths_nowcasted/_n_forecast: ‘deaths_nowcasted_n’ forecasted (.e. nowcasted)? deaths_nowcasted/_n/_censored: ‘deaths_nowcasted_n’ censored? deaths_nowcasted/_n/_status: Status ‘deaths_nowcasted_n’ relation ’deaths_nowcasted_baseline_credintervalobs_q*_n’. deaths_nowcasted/_credintervalobs_q02x5/_n: 2.5th quantile expect real number registered deaths (Bayesian). deaths_nowcasted_baseline/_predinterval_q02x5/_n: 2.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_predinterval_q97x5/_n: 97.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_credintervalobs_q02x5/_n: 2.5th quantile expect observation nowcasted deaths (Bayesian). deaths_nowcasted_baseline/_credintervalmean_q02x5/_n: 2.5th quantile mean nowcasted deaths (Bayesian). example relating number covid-19 cases: covid19_cases_regdate/_n: Number covid-19 cases registration date. covid19_cases_testdate/_n: Number covid-19 cases testing date. covid19_cases_testdate/_sum0_13/_n: sum 14 days cases. granularity_time==‘date’, date==‘2022-01-20’, current date ‘2022-02-07’, value sum covid19_cases_testdate_n ‘2022-01-07’ ‘2022-01-20’. granularity_time==‘isoyearweek’, isoyearweek==‘2022-03’, current date ‘2022-02-07’ (Monday isoyearweek ‘2022-06’) value sum covid19_cases_testdate_n ‘2022-01-10’ (Monday isoyearweek ‘2022-02’) ‘2022-01-23’ (Sunday isoyearweek ‘2022-03’). granularity_time==‘isoyearweek’, isoyearweek==‘2022-06’, current date ‘2022-02-07’ (Monday isoyearweek ‘2022-06’), value sum covid19_cases_testdate_n last day available data 13 days prior. granularity_time==‘event_covid19_norway_2020_02_21_to_9999_09_09’, value sum covid19_cases_testdate_n last day available data 13 days prior. covid19_cases_testdate/_sum0_999999/_n: sum recorded days cases. covid19_cases_testdate/_sum0_13/_n: Expected number nowcasted deaths (.e. baseline). deaths_nowcasted_baseline/_predinterval_q02x5/_n: 2.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_predinterval_q97x5/_n: 97.5th quantile expected new observation nowcasted deaths (frequentist). deaths_nowcasted_baseline/_credintervalobs_q02x5/_n: 2.5th quantile expect observation nowcasted deaths (Bayesian). deaths_nowcasted_baseline/_credintervalmean_q02x5/_n: 2.5th quantile mean nowcasted deaths (Bayesian). example relating number covid-19 tests: covid19_testevents/_n: Number covid-19 test events (.e. person getting tested within 7 day period). covid19_testevents_pos/_pr1: Proportion (0-1) covid-19 test events positive. covid19_testevents_pos/_pr100: Percentage (0-100) covid-19 test events positive. covid19_testevents_pos/_sum0_13/_pr100: Percentage (0-100) covid-19 test events positive last 14 days. covid19_testevents_pos/_daymean0_13/_pr100: last 14 days, calculate percentage (0-100) covid-19 test events positive, take mean 14 values. covid19_testevents_pos/_isoweekmean0_13/_pr100: last 7 day periods (0-6 days, 7-13 days), calculate percentage (0-100) covid-19 test events positive, take mean 2 values. example relating vaccination: covid19_vax_administered_dose_1/_n: Number people received first dose day/isoweek/event. corresponding age permanently fixed (person received first dose 21, always received first dose 21). covid19_vax_coverage_dose_1/_n: Number people (last day day/isoweek/event) received 1 dose vaccine. corresponding age fixed last day day/isoweek/event.","code":""},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"in-action","dir":"Articles","previous_headings":"","what":"In action","title":"Data format (csfmt_rts_data_v2)","text":"","code":"d <- cstidy::generate_test_data()[1:5] cstidy::set_csfmt_rts_data_v2(d)  # Looking at the dataset d[] #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:      isoyearweek          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 2:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2022-01-23        3 #> 2:      NA       NA         <NA> 2022-01-23        6 #> 3:      NA       NA         <NA> 2022-01-23        6 #> 4:      NA       NA         <NA> 2022-01-23        8 #> 5:      NA       NA         <NA> 2022-01-23        5  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[1, isoyearweek := \"2021-01\"] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:      isoyearweek          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        3 #> 2:      NA       NA         <NA> 2022-01-23        6 #> 3:      NA       NA         <NA> 2022-01-23        6 #> 4:      NA       NA         <NA> 2022-01-23        8 #> 5:      NA       NA         <NA> 2022-01-23        5  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[2, isoyear := 2019] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        3 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:      NA       NA         <NA> 2022-01-23        6 #> 4:      NA       NA         <NA> 2022-01-23        8 #> 5:      NA       NA         <NA> 2022-01-23        5  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[4:5, date := as.Date(\"2020-01-01\")] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:             date          county          nor  county_nor56     NA <NA> <NA> #> 5:             date          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 5:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        3 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:      NA       NA         <NA> 2022-01-23        6 #> 4:    2020        1     2020-M01 2020-01-01        8 #> 5:    2020        1     2020-M01 2020-01-01        5  # Smart assignment fails when multiple time columns are set d[1, c(\"isoyear\", \"isoyearweek\") := .(2021, \"2021-01\")] #> Warning in `[.csfmt_rts_data_v2`(d, 1, `:=`(c(\"isoyear\", \"isoyearweek\"), : #> Multiple time variables specified. Smart-assignment disabled. d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:             date          county          nor  county_nor56     NA <NA> <NA> #> 5:             date          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 5:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        3 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:      NA       NA         <NA> 2022-01-23        6 #> 4:    2020        1     2020-M01 2020-01-01        8 #> 5:    2020        1     2020-M01 2020-01-01        5  # Smart assignment of geo columns d[1, c(\"location_code\") := .(\"norge\")] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          nation          nor         norge     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:             date          county          nor  county_nor56     NA <NA> <NA> #> 5:             date          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 5:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        3 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:      NA       NA         <NA> 2022-01-23        6 #> 4:    2020        1     2020-M01 2020-01-01        8 #> 5:    2020        1     2020-M01 2020-01-01        5  # Collapsing down to different levels, and healing the dataset # (so that it can be worked on further with regards to real time surveillance) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby = .(granularity_time)] %>%   cstidy::set_csfmt_rts_data_v2(create_unified_columns = TRUE) %>%   print() #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:             date          nation          nor         norge     NA <NA> <NA> #> 2:          isoyear          nation          nor         norge     NA <NA> <NA> #> 3:      isoyearweek          nation          nor         norge     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter season seasonweek #> 1:      NA      NA        <NA>         NA           <NA>   <NA>         NA #> 2:      NA      NA        <NA>         NA           <NA>   <NA>         NA #> 3:      NA      NA        <NA>         NA           <NA>   <NA>         NA #>    calyear calmonth calyearmonth date deaths_n #> 1:      NA       NA         <NA> <NA>       13 #> 2:      NA       NA         <NA> <NA>        6 #> 3:      NA       NA         <NA> <NA>        9  # Collapsing down to different levels, without healing the dataset and without # removing the class csfmt_rts_data_v2 (this is uncommon) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby = .(granularity_time)] %>%   print() #>    granularity_time deaths_n location_code #> 1:             date       13         norge #> 2:          isoyear        6         norge #> 3:      isoyearweek        9         norge  # Collapsing to different levels, and removing the class csfmt_rts_data_v2 because # it is going to be used in new output/analyses d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby = .(granularity_time)] %>%   cstidy::remove_class_csfmt_rts_data() %>%   print() #>    granularity_time deaths_n location_code #> 1:             date       13         norge #> 2:          isoyear        6         norge #> 3:      isoyearweek        9         norge"},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"expand-time-to","dir":"Articles","previous_headings":"","what":"Expand time to","title":"Data format (csfmt_rts_data_v2)","text":"Sometimes need expand number rows dataset future time.","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   dplyr::filter(location_code == \"county03\") %>%   cstidy::expand_time_to(max_isoyearweek = \"2022-08\") %>%   print() #> Null data.table (0 rows and 0 cols)"},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"time-series","dir":"Articles","previous_headings":"","what":"Time series","title":"Data format (csfmt_rts_data_v2)","text":"might also need identify many time series one dataset.","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   cstidy::unique_time_series()"},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Data format (csfmt_rts_data_v2)","text":"need way easily summarize data structure dataset.","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   summary() #>  #> granularity_time #> ✅ No errors #>  #> granularity_geo #> ✅ No errors #>  #> country_iso3 #> ✅ No errors #>  #> location_code #> ✅ No errors #>  #> border #> ❌ Errors: #> - NA exists (not allowed) #>  #> age #> ✅ No errors #>  #> sex #> ✅ No errors #>  #> isoyear #> ✅ No errors #>  #> isoweek #> ✅ No errors #>  #> isoyearweek #> ✅ No errors #>  #> isoquarter #> ✅ No errors #>  #> isoyearquarter #> ✅ No errors #>  #> season #> ✅ No errors #>  #> seasonweek #> ✅ No errors #>  #> calyear #> ✅ No errors #>  #> calmonth #> ✅ No errors #>  #> calyearmonth #> ✅ No errors #>  #> date #> ✅ No errors #> granularity_time (character): #>  - isoyearweek (n = 45) #> granularity_geo (character): #>  - county (n = 45) #> country_iso3 (character): #>  - nor (n = 45) #> location_code (character) #> border (integer): #>  - <NA> (n = 45) #> age (character): #>  - <NA>    (n = 15) #>  - 000_005 (n = 15) #>  - total   (n = 15) #> sex (character): #>  - <NA>  (n = 15) #>  - total (n = 30) #> isoyear (integer): #>  - 2022 (n = 45) #> isoweek (integer) #> isoyearweek (character) #> isoquarter (integer) #> isoyearquarter (character) #> season (character): #>  - 2021/2022 (n = 45) #> seasonweek (numeric) #> calyear (integer) #> calmonth (integer) #> calyearmonth (character) #> date (Date) #> deaths_n (integer)"},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"identifying-data-structure-of-one-column","dir":"Articles","previous_headings":"","what":"Identifying data structure of one column","title":"Data format (csfmt_rts_data_v2)","text":"need way easily summarize data structure one column inside dataset.","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   cstidy::identify_data_structure(\"deaths_n\") %>%   plot()"},{"path":"https://www.csids.no/cstidy/articles/csfmt_rts_data_v2.html","id":"reference-location","dir":"Articles","previous_headings":"","what":"Reference (Location)","title":"Data format (csfmt_rts_data_v2)","text":"Locations can obtained csdata. Valid locations (location types) available csdata::nor_locations_names(). list reference table valid location_codes location_name_description_nbs (two commonly used locations).","code":""},{"path":"https://www.csids.no/cstidy/articles/cstidy.html","id":"csfmt_rts_data_v2","dir":"Articles","previous_headings":"","what":"csfmt_rts_data_v2","title":"Introduction","text":"csfmt_rts_data_v2 (vignette(\"csfmt_rts_data_v2\", package = \"cstidy\")) data format real-time surveillance.","code":"d <- cstidy::generate_test_data() cstidy::set_csfmt_rts_data_v2(d)  # Looking at the dataset d[] #>     granularity_time granularity_geo country_iso3 location_code border     age #>  1:      isoyearweek          county          nor  county_nor42     NA    <NA> #>  2:      isoyearweek          county          nor  county_nor32     NA    <NA> #>  3:      isoyearweek          county          nor  county_nor33     NA    <NA> #>  4:      isoyearweek          county          nor  county_nor56     NA    <NA> #>  5:      isoyearweek          county          nor  county_nor34     NA    <NA> #>  6:      isoyearweek          county          nor  county_nor15     NA    <NA> #>  7:      isoyearweek          county          nor  county_nor18     NA    <NA> #>  8:      isoyearweek          county          nor  county_nor03     NA    <NA> #>  9:      isoyearweek          county          nor  county_nor11     NA    <NA> #> 10:      isoyearweek          county          nor  county_nor40     NA    <NA> #> 11:      isoyearweek          county          nor  county_nor55     NA    <NA> #> 12:      isoyearweek          county          nor  county_nor50     NA    <NA> #> 13:      isoyearweek          county          nor  county_nor39     NA    <NA> #> 14:      isoyearweek          county          nor  county_nor46     NA    <NA> #> 15:      isoyearweek          county          nor  county_nor31     NA    <NA> #> 16:      isoyearweek          county          nor  county_nor42     NA   total #> 17:      isoyearweek          county          nor  county_nor32     NA   total #> 18:      isoyearweek          county          nor  county_nor33     NA   total #> 19:      isoyearweek          county          nor  county_nor56     NA   total #> 20:      isoyearweek          county          nor  county_nor34     NA   total #> 21:      isoyearweek          county          nor  county_nor15     NA   total #> 22:      isoyearweek          county          nor  county_nor18     NA   total #> 23:      isoyearweek          county          nor  county_nor03     NA   total #> 24:      isoyearweek          county          nor  county_nor11     NA   total #> 25:      isoyearweek          county          nor  county_nor40     NA   total #> 26:      isoyearweek          county          nor  county_nor55     NA   total #> 27:      isoyearweek          county          nor  county_nor50     NA   total #> 28:      isoyearweek          county          nor  county_nor39     NA   total #> 29:      isoyearweek          county          nor  county_nor46     NA   total #> 30:      isoyearweek          county          nor  county_nor31     NA   total #> 31:      isoyearweek          county          nor  county_nor42     NA 000_005 #> 32:      isoyearweek          county          nor  county_nor32     NA 000_005 #> 33:      isoyearweek          county          nor  county_nor33     NA 000_005 #> 34:      isoyearweek          county          nor  county_nor56     NA 000_005 #> 35:      isoyearweek          county          nor  county_nor34     NA 000_005 #> 36:      isoyearweek          county          nor  county_nor15     NA 000_005 #> 37:      isoyearweek          county          nor  county_nor18     NA 000_005 #> 38:      isoyearweek          county          nor  county_nor03     NA 000_005 #> 39:      isoyearweek          county          nor  county_nor11     NA 000_005 #> 40:      isoyearweek          county          nor  county_nor40     NA 000_005 #> 41:      isoyearweek          county          nor  county_nor55     NA 000_005 #> 42:      isoyearweek          county          nor  county_nor50     NA 000_005 #> 43:      isoyearweek          county          nor  county_nor39     NA 000_005 #> 44:      isoyearweek          county          nor  county_nor46     NA 000_005 #> 45:      isoyearweek          county          nor  county_nor31     NA 000_005 #>     granularity_time granularity_geo country_iso3 location_code border     age #>       sex isoyear isoweek isoyearweek isoquarter isoyearquarter    season #>  1:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  2:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  3:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  4:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  5:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  6:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  7:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  8:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #>  9:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 10:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 11:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 12:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 13:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 14:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 15:  <NA>    2022       3     2022-03          1        2022-Q1 2021/2022 #> 16: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 17: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 18: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 19: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 20: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 21: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 22: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 23: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 24: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 25: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 26: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 27: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 28: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 29: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 30: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 31: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 32: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 33: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 34: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 35: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 36: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 37: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 38: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 39: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 40: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 41: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 42: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 43: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 44: total    2022       3     2022-03          1        2022-Q1 2021/2022 #> 45: total    2022       3     2022-03          1        2022-Q1 2021/2022 #>       sex isoyear isoweek isoyearweek isoquarter isoyearquarter    season #>     seasonweek calyear calmonth calyearmonth       date deaths_n #>  1:         26      NA       NA         <NA> 2022-01-23        4 #>  2:         26      NA       NA         <NA> 2022-01-23        7 #>  3:         26      NA       NA         <NA> 2022-01-23        6 #>  4:         26      NA       NA         <NA> 2022-01-23        3 #>  5:         26      NA       NA         <NA> 2022-01-23        4 #>  6:         26      NA       NA         <NA> 2022-01-23        8 #>  7:         26      NA       NA         <NA> 2022-01-23        8 #>  8:         26      NA       NA         <NA> 2022-01-23        4 #>  9:         26      NA       NA         <NA> 2022-01-23        7 #> 10:         26      NA       NA         <NA> 2022-01-23        4 #> 11:         26      NA       NA         <NA> 2022-01-23        7 #> 12:         26      NA       NA         <NA> 2022-01-23        4 #> 13:         26      NA       NA         <NA> 2022-01-23        1 #> 14:         26      NA       NA         <NA> 2022-01-23        3 #> 15:         26      NA       NA         <NA> 2022-01-23        4 #> 16:         26      NA       NA         <NA> 2022-01-23        4 #> 17:         26      NA       NA         <NA> 2022-01-23        7 #> 18:         26      NA       NA         <NA> 2022-01-23        6 #> 19:         26      NA       NA         <NA> 2022-01-23        3 #> 20:         26      NA       NA         <NA> 2022-01-23        4 #> 21:         26      NA       NA         <NA> 2022-01-23        8 #> 22:         26      NA       NA         <NA> 2022-01-23        8 #> 23:         26      NA       NA         <NA> 2022-01-23        4 #> 24:         26      NA       NA         <NA> 2022-01-23        7 #> 25:         26      NA       NA         <NA> 2022-01-23        4 #> 26:         26      NA       NA         <NA> 2022-01-23        7 #> 27:         26      NA       NA         <NA> 2022-01-23        4 #> 28:         26      NA       NA         <NA> 2022-01-23        1 #> 29:         26      NA       NA         <NA> 2022-01-23        3 #> 30:         26      NA       NA         <NA> 2022-01-23        4 #> 31:         26      NA       NA         <NA> 2022-01-23        4 #> 32:         26      NA       NA         <NA> 2022-01-23        7 #> 33:         26      NA       NA         <NA> 2022-01-23        6 #> 34:         26      NA       NA         <NA> 2022-01-23        3 #> 35:         26      NA       NA         <NA> 2022-01-23        4 #> 36:         26      NA       NA         <NA> 2022-01-23        8 #> 37:         26      NA       NA         <NA> 2022-01-23        8 #> 38:         26      NA       NA         <NA> 2022-01-23        4 #> 39:         26      NA       NA         <NA> 2022-01-23        7 #> 40:         26      NA       NA         <NA> 2022-01-23        4 #> 41:         26      NA       NA         <NA> 2022-01-23        7 #> 42:         26      NA       NA         <NA> 2022-01-23        4 #> 43:         26      NA       NA         <NA> 2022-01-23        1 #> 44:         26      NA       NA         <NA> 2022-01-23        3 #> 45:         26      NA       NA         <NA> 2022-01-23        4 #>     seasonweek calyear calmonth calyearmonth       date deaths_n"},{"path":"https://www.csids.no/cstidy/articles/cstidy.html","id":"smart-assignment","dir":"Articles","previous_headings":"csfmt_rts_data_v2","what":"Smart assignment","title":"Introduction","text":"csfmt_rts_data_v2 smart assignment time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth","code":"d <- cstidy::generate_test_data()[1:5] cstidy::set_csfmt_rts_data_v2(d)  # Looking at the dataset d[] #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:      isoyearweek          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 2:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2022-01-23        9 #> 2:      NA       NA         <NA> 2022-01-23        4 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[1,isoyearweek := \"2021-01\"] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:      isoyearweek          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        9 #> 2:      NA       NA         <NA> 2022-01-23        4 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[2,isoyear := 2019] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        9 #> 2:      NA       NA         <NA> 2019-12-29        4 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5  # Smart assignment of time columns (note how granularity_time, isoyear, isoyearweek, date all change) d[4:5,date := as.Date(\"2020-01-01\")] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:             date          county          nor  county_nor56     NA <NA> <NA> #> 5:             date          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 5:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        9 #> 2:      NA       NA         <NA> 2019-12-29        4 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:    2020        1     2020-M01 2020-01-01        4 #> 5:    2020        1     2020-M01 2020-01-01        5  # Smart assignment fails when multiple time columns are set d[1,c(\"isoyear\",\"isoyearweek\") := .(2021,\"2021-01\")] #> Warning in `[.csfmt_rts_data_v2`(d, 1, `:=`(c(\"isoyear\", \"isoyearweek\"), : #> Multiple time variables specified. Smart-assignment disabled. d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:             date          county          nor  county_nor56     NA <NA> <NA> #> 5:             date          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 5:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        9 #> 2:      NA       NA         <NA> 2019-12-29        4 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:    2020        1     2020-M01 2020-01-01        4 #> 5:    2020        1     2020-M01 2020-01-01        5  # Smart assignment of geo columns d[1,c(\"location_code\") := .(\"norge\")] d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          nation          nor         norge     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:             date          county          nor  county_nor56     NA <NA> <NA> #> 5:             date          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 5:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        9 #> 2:      NA       NA         <NA> 2019-12-29        4 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:    2020        1     2020-M01 2020-01-01        4 #> 5:    2020        1     2020-M01 2020-01-01        5  # Collapsing down to different levels, and healing the dataset  # (so that it can be worked on further with regards to real time surveillance) d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby=.(granularity_time)] %>%   cstidy::set_csfmt_rts_data_v2(create_unified_columns = FALSE) %>%   print() #>    granularity_time deaths_n location_code date #> 1:             date        9         norge <NA> #> 2:          isoyear        4         norge <NA> #> 3:      isoyearweek       12         norge <NA>  # Collapsing to different levels, and removing the class csfmt_rts_data_v2 because # it is going to be used in new output/analyses d[, .(deaths_n = sum(deaths_n), location_code = \"norge\"), keyby=.(granularity_time)] %>%   cstidy::remove_class_csfmt_rts_data() %>%   print() #>    granularity_time deaths_n location_code #> 1:             date        9         norge #> 2:          isoyear        4         norge #> 3:      isoyearweek       12         norge"},{"path":"https://www.csids.no/cstidy/articles/cstidy.html","id":"summary","dir":"Articles","previous_headings":"csfmt_rts_data_v2","what":"Summary","title":"Introduction","text":"need way easily summarize data structure dataset.","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   summary() #>  #> granularity_time #> ✅ No errors #>  #> granularity_geo #> ✅ No errors #>  #> country_iso3 #> ✅ No errors #>  #> location_code #> ✅ No errors #>  #> border #> ❌ Errors: #> - NA exists (not allowed) #>  #> age #> ✅ No errors #>  #> sex #> ✅ No errors #>  #> isoyear #> ✅ No errors #>  #> isoweek #> ✅ No errors #>  #> isoyearweek #> ✅ No errors #>  #> isoquarter #> ✅ No errors #>  #> isoyearquarter #> ✅ No errors #>  #> season #> ✅ No errors #>  #> seasonweek #> ✅ No errors #>  #> calyear #> ✅ No errors #>  #> calmonth #> ✅ No errors #>  #> calyearmonth #> ✅ No errors #>  #> date #> ✅ No errors #> granularity_time (character): #>  - isoyearweek (n = 45) #> granularity_geo (character): #>  - county (n = 45) #> country_iso3 (character): #>  - nor (n = 45) #> location_code (character) #> border (integer): #>  - <NA> (n = 45) #> age (character): #>  - <NA>    (n = 15) #>  - 000_005 (n = 15) #>  - total   (n = 15) #> sex (character): #>  - <NA>  (n = 15) #>  - total (n = 30) #> isoyear (integer): #>  - 2022 (n = 45) #> isoweek (integer) #> isoyearweek (character) #> isoquarter (integer) #> isoyearquarter (character) #> season (character): #>  - 2021/2022 (n = 45) #> seasonweek (numeric) #> calyear (integer) #> calmonth (integer) #> calyearmonth (character) #> date (Date) #> deaths_n (integer)"},{"path":"https://www.csids.no/cstidy/articles/cstidy.html","id":"identifying-data-structure-of-one-column","dir":"Articles","previous_headings":"csfmt_rts_data_v2","what":"Identifying data structure of one column","title":"Introduction","text":"need way easily summarize data structure one column inside dataset.","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   cstidy::identify_data_structure(\"deaths_n\") %>%   plot()"},{"path":"https://www.csids.no/cstidy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package proudly brought : Richard Aubrey White. Author, maintainer. . Copyright holder. See changelog contributors. 🙏","code":""},{"path":"https://www.csids.no/cstidy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White RA (2024). cstidy: Helpful Functions Cleaning Surveillance Data. R package version 2024.6.13, https://github.com/csids/cstidy, https://www.csids./cstidy/.","code":"@Manual{,   title = {cstidy: Helpful Functions for Cleaning Surveillance Data},   author = {Richard Aubrey White},   year = {2024},   note = {R package version 2024.6.13, https://github.com/csids/cstidy},   url = {https://www.csids.no/cstidy/}, }"},{"path":[]},{"path":"https://www.csids.no/cstidy/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Helpful Functions for Cleaning Surveillance Data","text":"cstidy contains helpful functions cleaning manipulation surveillance data, especially regards creation validation panel data individual level surveillance data. Read introduction vignette run help(package=\"cstidy\").","code":""},{"path":"https://www.csids.no/cstidy/index.html","id":"csverse","dir":"","previous_headings":"","what":"csverse","title":"Helpful Functions for Cleaning Surveillance Data","text":"csverse set R packages developed help solve problems frequently occur performing disease surveillance. want install dev versions (access packages haven’t released CRAN), run usethis::edit_r_profile() edit .Rprofile. write : Save file restart R. can now install csverse packages drat repository.","code":"options(   repos = structure(c(     CSVERSE = \"https://www.csids.no/drat/\",     CRAN    = \"https://cran.rstudio.com\"   )) ) install.packages(\"cstidy\")"},{"path":"https://www.csids.no/cstidy/reference/expand_time_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand time to — expand_time_to","title":"Expand time to — expand_time_to","text":"Attempts expand dataset include time time series defined unique combination : granularity_time granularity_geo country_iso3 location_code border age sex *_id *_tag","code":""},{"path":"https://www.csids.no/cstidy/reference/expand_time_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand time to — expand_time_to","text":"","code":"expand_time_to(   x,   max_isoyear = NULL,   max_isoyearweek = NULL,   max_date = NULL,   ... )"},{"path":"https://www.csids.no/cstidy/reference/expand_time_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand time to — expand_time_to","text":"x object type csfmt_rts_data_v2 max_isoyear Maximum isoyear max_isoyearweek Maximum isoyearweek max_date Maximum date ... used.","code":""},{"path":"https://www.csids.no/cstidy/reference/expand_time_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand time to — expand_time_to","text":"csfmt_rts_data_v2, larger dataset includes rows corresponding time.","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/reference/generate_test_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate test data — generate_test_data","title":"Generate test data — generate_test_data","text":"Generates test data","code":""},{"path":"https://www.csids.no/cstidy/reference/generate_test_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate test data — generate_test_data","text":"","code":"generate_test_data(fmt = \"csfmt_rts_data_v2\")"},{"path":"https://www.csids.no/cstidy/reference/generate_test_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate test data — generate_test_data","text":"fmt Data format (csfmt_rts_data_v2)","code":""},{"path":"https://www.csids.no/cstidy/reference/generate_test_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate test data — generate_test_data","text":"csfmt_rts_data_v2, dataset containing fake data.","code":""},{"path":"https://www.csids.no/cstidy/reference/generate_test_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate test data — generate_test_data","text":"","code":"cstidy::generate_test_data(\"csfmt_rts_data_v2\") #>     location_code granularity_time isoyearweek deaths_n isoyear     age   sex #>  1:  county_nor42      isoyearweek     2022-03        8      NA    <NA>  <NA> #>  2:  county_nor32      isoyearweek     2022-03        4      NA    <NA>  <NA> #>  3:  county_nor33      isoyearweek     2022-03        6      NA    <NA>  <NA> #>  4:  county_nor56      isoyearweek     2022-03        6      NA    <NA>  <NA> #>  5:  county_nor34      isoyearweek     2022-03        6      NA    <NA>  <NA> #>  6:  county_nor15      isoyearweek     2022-03        7      NA    <NA>  <NA> #>  7:  county_nor18      isoyearweek     2022-03        8      NA    <NA>  <NA> #>  8:  county_nor03      isoyearweek     2022-03        7      NA    <NA>  <NA> #>  9:  county_nor11      isoyearweek     2022-03        8      NA    <NA>  <NA> #> 10:  county_nor40      isoyearweek     2022-03        3      NA    <NA>  <NA> #> 11:  county_nor55      isoyearweek     2022-03        4      NA    <NA>  <NA> #> 12:  county_nor50      isoyearweek     2022-03        5      NA    <NA>  <NA> #> 13:  county_nor39      isoyearweek     2022-03        4      NA    <NA>  <NA> #> 14:  county_nor46      isoyearweek     2022-03        4      NA    <NA>  <NA> #> 15:  county_nor31      isoyearweek     2022-03        3      NA    <NA>  <NA> #> 16:  county_nor42      isoyearweek     2022-03        8    2022   total total #> 17:  county_nor32      isoyearweek     2022-03        4    2022   total total #> 18:  county_nor33      isoyearweek     2022-03        6    2022   total total #> 19:  county_nor56      isoyearweek     2022-03        6    2022   total total #> 20:  county_nor34      isoyearweek     2022-03        6    2022   total total #> 21:  county_nor15      isoyearweek     2022-03        7    2022   total total #> 22:  county_nor18      isoyearweek     2022-03        8    2022   total total #> 23:  county_nor03      isoyearweek     2022-03        7    2022   total total #> 24:  county_nor11      isoyearweek     2022-03        8    2022   total total #> 25:  county_nor40      isoyearweek     2022-03        3    2022   total total #> 26:  county_nor55      isoyearweek     2022-03        4    2022   total total #> 27:  county_nor50      isoyearweek     2022-03        5    2022   total total #> 28:  county_nor39      isoyearweek     2022-03        4    2022   total total #> 29:  county_nor46      isoyearweek     2022-03        4    2022   total total #> 30:  county_nor31      isoyearweek     2022-03        3    2022   total total #> 31:  county_nor42      isoyearweek     2022-03        8    2022 000_005 total #> 32:  county_nor32      isoyearweek     2022-03        4    2022 000_005 total #> 33:  county_nor33      isoyearweek     2022-03        6    2022 000_005 total #> 34:  county_nor56      isoyearweek     2022-03        6    2022 000_005 total #> 35:  county_nor34      isoyearweek     2022-03        6    2022 000_005 total #> 36:  county_nor15      isoyearweek     2022-03        7    2022 000_005 total #> 37:  county_nor18      isoyearweek     2022-03        8    2022 000_005 total #> 38:  county_nor03      isoyearweek     2022-03        7    2022 000_005 total #> 39:  county_nor11      isoyearweek     2022-03        8    2022 000_005 total #> 40:  county_nor40      isoyearweek     2022-03        3    2022 000_005 total #> 41:  county_nor55      isoyearweek     2022-03        4    2022 000_005 total #> 42:  county_nor50      isoyearweek     2022-03        5    2022 000_005 total #> 43:  county_nor39      isoyearweek     2022-03        4    2022 000_005 total #> 44:  county_nor46      isoyearweek     2022-03        4    2022 000_005 total #> 45:  county_nor31      isoyearweek     2022-03        3    2022 000_005 total #>     location_code granularity_time isoyearweek deaths_n isoyear     age   sex"},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides corresponding healed times (deprecated) — heal_time_csfmt_rts_data_v1","title":"Provides corresponding healed times (deprecated) — heal_time_csfmt_rts_data_v1","text":"Provides corresponding healed times (deprecated)","code":""},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides corresponding healed times (deprecated) — heal_time_csfmt_rts_data_v1","text":"","code":"heal_time_csfmt_rts_data_v1(x, cols, granularity_time = \"date\")"},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides corresponding healed times (deprecated) — heal_time_csfmt_rts_data_v1","text":"x vector containing either dates, isoyearweek, isoyear. cols Columns restrict output . granularity_time date, isoyearweek, isoyear, depending values contained x.","code":""},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides corresponding healed times (deprecated) — heal_time_csfmt_rts_data_v1","text":"data.table, dataset time columns corresponding values given x.","code":""},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides corresponding healed times — heal_time_csfmt_rts_data_v2","title":"Provides corresponding healed times — heal_time_csfmt_rts_data_v2","text":"Provides corresponding healed times","code":""},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides corresponding healed times — heal_time_csfmt_rts_data_v2","text":"","code":"heal_time_csfmt_rts_data_v2(x, cols, granularity_time = \"date\")"},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides corresponding healed times — heal_time_csfmt_rts_data_v2","text":"x vector containing either dates, isoyearweek, isoyear. cols Columns restrict output . granularity_time date, isoyearweek, isoyear, depending values contained x.","code":""},{"path":"https://www.csids.no/cstidy/reference/heal_time_csfmt_rts_data_v2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides corresponding healed times — heal_time_csfmt_rts_data_v2","text":"data.table, dataset time columns corresponding values given x.","code":""},{"path":"https://www.csids.no/cstidy/reference/identify_data_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Hash the data structure of a dataset for a given column — identify_data_structure","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"Reduces data structure column inside dataset something describes","code":""},{"path":"https://www.csids.no/cstidy/reference/identify_data_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"","code":"identify_data_structure(x, col, ...)  # S3 method for csfmt_rts_data_v2 identify_data_structure(x, col, ...)  # S3 method for `tbl_Microsoft SQL Server` identify_data_structure(x, col, ...)"},{"path":"https://www.csids.no/cstidy/reference/identify_data_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"x object col Column name hash ... Arguments passed methods","code":""},{"path":"https://www.csids.no/cstidy/reference/identify_data_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"csfmt_rts_data_structure_hash_v2, summary object.","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/reference/identify_data_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hash the data structure of a dataset for a given column — identify_data_structure","text":"","code":"cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   cstidy::identify_data_structure(\"deaths_n\") %>%   plot()"},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_cases_by_time_location_csfmt_rts_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location_csfmt_rts_v1","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location_csfmt_rts_v1","text":"data comes Norwegian Surveillance System Communicable Diseases (MSIS). date corresponds PCR-test taken.","code":""},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_cases_by_time_location_csfmt_rts_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location_csfmt_rts_v1","text":"","code":"nor_covid19_cases_by_time_location_csfmt_rts_v1"},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_cases_by_time_location_csfmt_rts_v1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location_csfmt_rts_v1","text":"csfmt_rts_data_v1 11028 rows 18 variables: granularity_time day/isoweek granularity_geo nation, county country_iso3 location_code norge, 11 counties border 2020 age total isoyear Isoyear event isoweek Isoweek event isoyearweek Isoyearweek event season Season event seasonweek Seasonweek event calyear Calyear event calmonth Calmonth event calyearmonth Calyearmonth event date Date event covid19_cases_testdate_n Number confirmed covid19 cases covid19_cases_testdate_pr100000 Number confirmed covid19 cases per 100.000 population","code":""},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_cases_by_time_location_csfmt_rts_v1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location_csfmt_rts_v1","text":"https://github.com/folkehelseinstituttet/surveillance_data/blob/master/covid19/_DOCUMENTATION_data_covid19_msis_by_time_location.txt","code":""},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_cases_by_time_location_csfmt_rts_v1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Covid-19 data for PCR-confirmed cases in Norway (nation and county) — nor_covid19_cases_by_time_location_csfmt_rts_v1","text":"raw number cases cases per 100.000 population recorded. data extracted 2022-05-04.","code":""},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_icu_and_hospitalization_csfmt_rts_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Norwegian Covid-19 data for ICU and hospitalization — nor_covid19_icu_and_hospitalization_csfmt_rts_v1","title":"Norwegian Covid-19 data for ICU and hospitalization — nor_covid19_icu_and_hospitalization_csfmt_rts_v1","text":"data extracted 2022-05-04.","code":""},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_icu_and_hospitalization_csfmt_rts_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Norwegian Covid-19 data for ICU and hospitalization — nor_covid19_icu_and_hospitalization_csfmt_rts_v1","text":"","code":"nor_covid19_icu_and_hospitalization_csfmt_rts_v1"},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_icu_and_hospitalization_csfmt_rts_v1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Norwegian Covid-19 data for ICU and hospitalization — nor_covid19_icu_and_hospitalization_csfmt_rts_v1","text":"csfmt_rts_data_v1 919 rows 18 variables: granularity_time day/isoweek granularity_geo nation country_iso3 location_code norge border 2020 age total isoyear Isoyear event isoweek Isoweek event isoyearweek Isoyearweek event season Season event seasonweek Seasonweek event calyear Calyear event calmonth Calmonth event calyearmonth Calyearmonth event date Date event icu_with_positive_pcr_n Number new admissions ICU positive PCR test hospitalization_with_covid19_as_primary_cause_n Number new hospitalizations Covid-19 primary cause","code":""},{"path":"https://www.csids.no/cstidy/reference/nor_covid19_icu_and_hospitalization_csfmt_rts_v1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Norwegian Covid-19 data for ICU and hospitalization — nor_covid19_icu_and_hospitalization_csfmt_rts_v1","text":"https://github.com/folkehelseinstituttet/surveillance_data/blob/master/covid19/_DOCUMENTATION_data_covid19_hospital_by_time.txt","code":""},{"path":"https://www.csids.no/cstidy/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://www.csids.no/cstidy/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://www.csids.no/cstidy/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://www.csids.no/cstidy/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://www.csids.no/cstidy/reference/remove_class_csfmt_rts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove class csfmt_rts_data_* — remove_class_csfmt_rts_data","title":"Remove class csfmt_rts_data_* — remove_class_csfmt_rts_data","text":"Remove class csfmt_rts_data_*","code":""},{"path":"https://www.csids.no/cstidy/reference/remove_class_csfmt_rts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove class csfmt_rts_data_* — remove_class_csfmt_rts_data","text":"","code":"remove_class_csfmt_rts_data(x)"},{"path":"https://www.csids.no/cstidy/reference/remove_class_csfmt_rts_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove class csfmt_rts_data_* — remove_class_csfmt_rts_data","text":"x data.table","code":""},{"path":"https://www.csids.no/cstidy/reference/remove_class_csfmt_rts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove class csfmt_rts_data_* — remove_class_csfmt_rts_data","text":"return value, called side effect removing csfmt_rts_data class x.","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/reference/remove_class_csfmt_rts_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove class csfmt_rts_data_* — remove_class_csfmt_rts_data","text":"","code":"x <- cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() class(x) #> [1] \"csfmt_rts_data_v2\" \"data.table\"        \"data.frame\"        cstidy::remove_class_csfmt_rts_data(x) class(x) #> [1] \"data.table\" \"data.frame\""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v1.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","title":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","text":"set_csfmt_rts_data_v1 converts data.table csfmt_rts_data_v1 reference. csfmt_rts_data_v1 creates new csfmt_rts_data_v1 (reference) either data.table data.frame.","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","text":"","code":"set_csfmt_rts_data_v1(x, create_unified_columns = TRUE, heal = TRUE)  csfmt_rts_data_v1(x, create_unified_columns = TRUE, heal = TRUE)"},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","text":"x data.table converted csfmt_rts_data_v1 create_unified_columns want create unified columns? heal want impute missing values creation?","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","text":"extended data.table, modified reference returned (invisibly). return value, called side effect replacing current data.table csfmt_rts_data_v1 place. Returns duplicated csfmt_rts_data_v1.","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v1.html","id":"smart-assignment","dir":"Reference","previous_headings":"","what":"Smart assignment","title":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","text":"csfmt_rts_data_v1 contains smart assignment feature time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v1.html","id":"unified-columns","dir":"Reference","previous_headings":"","what":"Unified columns","title":"Convert data.table to csfmt_rts_data_v1 (deprecated) — set_csfmt_rts_data_v1","text":"csfmt_rts_data_v1 contains 16 unified columns: granularity_time granularity_geo country_iso3 location_code border age sex isoyear isoweek isoyearweek season seasonweek calyear calmonth calyearmonth date","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"set_csfmt_rts_data_v2 converts data.table csfmt_rts_data_v2 reference. csfmt_rts_data_v2 creates new csfmt_rts_data_v2 (reference) either data.table data.frame.","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"","code":"set_csfmt_rts_data_v2(x, create_unified_columns = TRUE, heal = TRUE)  csfmt_rts_data_v2(x, create_unified_columns = TRUE, heal = TRUE)"},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"x data.table converted csfmt_rts_data_v2 create_unified_columns want create unified columns? heal want impute missing values creation?","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"extended data.table, modified reference returned (invisibly). return value, called side effect replacing current data.table csfmt_rts_data_v2 place. Returns duplicated csfmt_rts_data_v2.","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"details see vignette: vignette(\"csfmt_rts_data_v2\", package = \"cstidy\")","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"smart-assignment","dir":"Reference","previous_headings":"","what":"Smart assignment","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"csfmt_rts_data_v2 contains smart assignment feature time geography. variables bold assigned using :=, listed variables automatically imputed. location_code: granularity_geo country_iso3 isoyear: granularity_time isoweek isoyearweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth date isoyearweek: granularity_time isoyear isoweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth date date: granularity_time isoyear isoweek isoyearweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth","code":""},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"unified-columns","dir":"Reference","previous_headings":"","what":"Unified columns","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"csfmt_rts_data_v2 contains 16 unified columns: granularity_time granularity_geo country_iso3 location_code border age sex isoyear isoweek isoyearweek isoquarter isoyearquarter season seasonweek calyear calmonth calyearmonth date","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/reference/set_csfmt_rts_data_v2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.table to csfmt_rts_data_v2 — set_csfmt_rts_data_v2","text":"","code":"# Create some fake data as data.table d <- cstidy::generate_test_data(fmt = \"csfmt_rts_data_v2\") d <- d[1:5]  # convert to csfmt_rts_data_v2 by reference cstidy::set_csfmt_rts_data_v2(d, create_unified_columns = TRUE)  # d[1, isoyearweek := \"2021-01\"] #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:      isoyearweek          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2022-01-23        6 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:      isoyearweek          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2022-01-23        6 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d[2, isoyear := 2019] #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:      isoyearweek          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:      NA       NA         <NA> 2022-01-23        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d[3, date := as.Date(\"2020-01-01\")] #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:             date          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:    2020        1     2020-M01 2020-01-01        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:             date          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 4:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:    2020        1     2020-M01 2020-01-01        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d[4, c(\"isoyear\", \"isoyearweek\") := .(2021, \"2021-01\")] #> Warning: Multiple time variables specified. Smart-assignment disabled. #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:             date          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 4:    2021       3     2021-01          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:    2020        1     2020-M01 2020-01-01        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:             date          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          county          nor  county_nor34     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 4:    2021       3     2021-01          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:    2020        1     2020-M01 2020-01-01        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d[5, c(\"location_code\") := .(\"norge\")] #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:             date          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          nation          nor         norge     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 4:    2021       3     2021-01          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:    2020        1     2020-M01 2020-01-01        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5 d #>    granularity_time granularity_geo country_iso3 location_code border  age  sex #> 1:      isoyearweek          county          nor  county_nor42     NA <NA> <NA> #> 2:          isoyear          county          nor  county_nor32     NA <NA> <NA> #> 3:             date          county          nor  county_nor33     NA <NA> <NA> #> 4:      isoyearweek          county          nor  county_nor56     NA <NA> <NA> #> 5:      isoyearweek          nation          nor         norge     NA <NA> <NA> #>    isoyear isoweek isoyearweek isoquarter isoyearquarter    season seasonweek #> 1:    2021       1     2021-01          1        2021-Q1 2020/2021         24 #> 2:    2019      52     2019-52          1        2022-Q1      <NA>         NA #> 3:    2020       1     2020-01          1        2020-Q1 2019/2020         24 #> 4:    2021       3     2021-01          1        2022-Q1 2021/2022         26 #> 5:    2022       3     2022-03          1        2022-Q1 2021/2022         26 #>    calyear calmonth calyearmonth       date deaths_n #> 1:      NA       NA         <NA> 2021-01-10        0 #> 2:      NA       NA         <NA> 2019-12-29        6 #> 3:    2020        1     2020-M01 2020-01-01        3 #> 4:      NA       NA         <NA> 2022-01-23        4 #> 5:      NA       NA         <NA> 2022-01-23        5  # Investigating the data structure of one column inside a dataset cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   cstidy::identify_data_structure(\"deaths_n\") %>%   plot()  # Investigating the data structure via summary cstidy::generate_test_data() %>%   cstidy::set_csfmt_rts_data_v2() %>%   summary() #>  #> granularity_time #> ✅ No errors #>  #> granularity_geo #> ✅ No errors #>  #> country_iso3 #> ✅ No errors #>  #> location_code #> ✅ No errors #>  #> border #> ❌ Errors: #> - NA exists (not allowed) #>  #> age #> ✅ No errors #>  #> sex #> ✅ No errors #>  #> isoyear #> ✅ No errors #>  #> isoweek #> ✅ No errors #>  #> isoyearweek #> ✅ No errors #>  #> isoquarter #> ✅ No errors #>  #> isoyearquarter #> ✅ No errors #>  #> season #> ✅ No errors #>  #> seasonweek #> ✅ No errors #>  #> calyear #> ✅ No errors #>  #> calmonth #> ✅ No errors #>  #> calyearmonth #> ✅ No errors #>  #> date #> ✅ No errors #> granularity_time (character): #> \t- isoyearweek (n = 45) #> granularity_geo (character): #> \t- county (n = 45) #> country_iso3 (character): #> \t- nor (n = 45) #> location_code (character) #> border (integer): #> \t- <NA> (n = 45) #> age (character): #> \t- 000_005 (n = 15) #> \t- <NA>    (n = 15) #> \t- total   (n = 15) #> sex (character): #> \t- <NA>  (n = 15) #> \t- total (n = 30) #> isoyear (integer): #> \t- 2022 (n = 45) #> isoweek (integer) #> isoyearweek (character) #> isoquarter (integer) #> isoyearquarter (character) #> season (character): #> \t- 2021/2022 (n = 45) #> seasonweek (numeric) #> calyear (integer) #> calmonth (integer) #> calyearmonth (character) #> date (Date) #> deaths_n (integer) #>"},{"path":"https://www.csids.no/cstidy/reference/unique_time_series.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique time series — unique_time_series","title":"Unique time series — unique_time_series","text":"Attempts identify unique time series exist dataset. time series defined unique combination : granularity_time granularity_geo country_iso3 location_code border age sex *_id *_tag","code":""},{"path":"https://www.csids.no/cstidy/reference/unique_time_series.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique time series — unique_time_series","text":"","code":"unique_time_series(x, set_time_series_id = FALSE, ...)"},{"path":"https://www.csids.no/cstidy/reference/unique_time_series.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique time series — unique_time_series","text":"x object type csfmt_rts_data_v2 set_time_series_id TRUE, x new column called 'time_series_id' ... used.","code":""},{"path":"https://www.csids.no/cstidy/reference/unique_time_series.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique time series — unique_time_series","text":"data.table, dataset lists unique time series x.","code":""},{"path":[]},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2024613","dir":"Changelog","previous_headings":"","what":"Version 2024.6.13","title":"Version 2024.6.13","text":"Inclusion season csfmt_rts_data_v2","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-20231228","dir":"Changelog","previous_headings":"","what":"Version 2023.12.28","title":"Version 2023.12.28","text":"Inclusion isoquarter isoyearquarter csfmt_rts_data_v2","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2023522","dir":"Changelog","previous_headings":"","what":"Version 2023.5.22","title":"Version 2023.5.22","text":"CRAN Submission.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2023516","dir":"Changelog","previous_headings":"","what":"Version 2023.5.16","title":"Version 2023.5.16","text":"Removing print.csfmt_rts_data_v1.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2023426","dir":"Changelog","previous_headings":"","what":"Version 2023.4.26","title":"Version 2023.4.26","text":"cstidy::set_csfmt_rts_data_v1 now 1.5x faster due using upgraded cstime package now uses binary searches. 80 million row dataset now processed 2 minutes, instead 3.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2023425","dir":"Changelog","previous_headings":"","what":"Version 2023.4.25","title":"Version 2023.4.25","text":"cstidy::set_csfmt_rts_data_v1 now 6x faster due using upgraded cstime package now uses csutil::apply_fn_via_hash_table. 80 million row dataset now processed 3 minutes, instead 20.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2022117","dir":"Changelog","previous_headings":"","what":"Version 2022.1.17","title":"Version 2022.1.17","text":"Dataset norway_covid19_cases_by_time_location renamed nor_covid19_cases_by_time_location_csfmt_rts_v1. Dataset norway_covid19_icu_and_hospitalization renamed nor_covid19_icu_and_hospitalization_csfmt_rts_v1.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2022531","dir":"Changelog","previous_headings":"","what":"Version 2022.5.31","title":"Version 2022.5.31","text":"csfmt_rts_v1, age now uses underscores instead hyphens valid variable names generated converting wide-format.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2022525","dir":"Changelog","previous_headings":"","what":"Version 2022.5.25","title":"Version 2022.5.25","text":"Dataset covid19_msis_cases_by_time_location renamed norway_covid19_cases_by_time_location. csfmt_rts_v1, granularity_time “ongoing event” changed event_*9999_01_01 event*_9999_09_09. done isoyear 9999-01-01 9998 (confusing), isoyear 9999-09-09 9999 (makes sense). csfmt_rts_v1, missing value sex age changed “missing” instead NA_character_. chosen NA_character_ requires special manipulation functions (.na) makes post-processing data less efficient end-user. csfmt_rts_v1, cstidy::heal now works granularity_time==’event_*’","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2022519","dir":"Changelog","previous_headings":"","what":"Version 2022.5.19","title":"Version 2022.5.19","text":"Dataset covid19_msis_cases_by_time_location included, containing number Covid19 cases MSIS registry. locations national county level. percentage per 100.000 population included. time period 2020-02-21 2022-05-03 (data extracted 2022-05-04).","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-202255","dir":"Changelog","previous_headings":"","what":"Version 2022.5.5","title":"Version 2022.5.5","text":"Dataset norway_covid19_icu_and_hospitalization included, containing admissions ICU positive PCR test number new hospitalizations Covid-19 primary cause 2020-02-21 2022-05-03 (data extracted 2022-05-04).","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2022426","dir":"Changelog","previous_headings":"","what":"Version 2022.4.26","title":"Version 2022.4.26","text":"save_cs, read_cs functions save/read data efficiently, allowing passwordless encryption.","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-2022422","dir":"Changelog","previous_headings":"","what":"Version 2022.4.22","title":"Version 2022.4.22","text":"print.csfmt_rts_data_v1 now automatically rounds numerics 4 decimal places","code":""},{"path":"https://www.csids.no/cstidy/news/index.html","id":"version-202247","dir":"Changelog","previous_headings":"","what":"Version 2022.4.7","title":"Version 2022.4.7","text":"unique_time_series function added.","code":""}]
